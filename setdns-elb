#! /usr/bin/php
<?php /* -*- mode:php -*- */

require_once ("/var/slimstk/slimstk.php");
slimstk_init ();

if (! $running_on_aws)
	exit (0);

printf ("setdns-elb: not ready yet...\n");
exit (0);

$siteid = preg_replace ('/[.].*/', '', basename (getcwd ()));
if (! preg_match ('/-/', $siteid))
	$siteid .= sprintf ("-%s", $_SERVER['USER']);

$region = $stkinfo['region'];
$hosted_zone_id = $stkinfo['server_hosted_zone_id'];

$sinfo = $stkinfo['sites'][$siteid];

$dns_name = $sinfo['dns_name'];
if (! preg_match ('/[.]$/', $dns_name))
	$dns_name .= ".";
$www_dns_name = sprintf ("www.%s", $dns_name);

$elb_name = sprintf ("%selb", $stkname);


$cmd = sprintf ("aws --region %s elb describe-load-balancers"
		." --load-balancer-name %s",
		escapeshellarg ($region),
		escapeshellarg ($elb_name));
$output = NULL;
exec ($cmd, $output, $rc);
if ($rc != 0) {
	printf ("error running: %s\n", $cmd);
	exit (1);
}
$lbinfo = json_decode (implode ("\n", $output), true);
$elb = $lbinfo['LoadBalancerDescriptions'][0];

$elb_dns_name = $elb['DNSName'];
if (! preg_match ('/[.]$/', $elb_dns_name))
	$elb_dns_name .= ".";

$elb_hosted_zone_id = $elb['CanonicalHostedZoneNameID'];

$cmd = sprintf ("aws route53 list-resource-record-sets"
		." --hosted-zone-id %s",
		$hosted_zone_id);
$output = NULL;
exec ($cmd, $output, $rc);
if ($rc != 0) {
	printf ("error running: %s\n", $cmd);
	exit (1);
}
$r53info = json_decode (implode ("\n", $output), true);
$sets = $r53info['ResourceRecordSets'];

$plain_ok = 0;
$www_ok = 0;
foreach ($sets as $item) {
	if (($val = @$item['AliasTarget']) == NULL)
		continue;
	if ($val['HostedZoneId'] == $elb_hosted_zone_id
	    && $val['DNSName'] == $elb_dns_name) {
		if ($item['Name'] == $dns_name) {
			$plain_ok = 1;
		} else if ($item['Name'] == $www_dns_name) {
			$www_ok = 1;
		}
	}
}

$items = array ();

if (! $plain_ok) {
	$items[] = array ("Action" => "UPSERT", 
			  "ResourceRecordSet" => array (
				  "Name" => $dns_name, 
				  "Type" => "A", 
				  "AliasTarget" => array (
					  "HostedZoneId" => $elb_hosted_zone_id,
					  "DNSName" => $elb_dns_name,
					  "EvaluateTargetHealth" => false
					  )
				  )
		);
}

if (! $www_ok) {
	$items[] = array ("Action" => "UPSERT", 
			  "ResourceRecordSet" => array (
				  "Name" => $www_dns_name, 
				  "Type" => "A", 
				  "AliasTarget" => array (
					  "HostedZoneId" => $elb_hosted_zone_id,
					  "DNSName" => $elb_dns_name,
					  "EvaluateTargetHealth" => false
					  )
				  )
		);
}

if (count ($items) == 0) {
	printf ("route53 already up to date\n");
	exit (0);
}

$arg = array ("Changes" => $items);

$cmd = sprintf ("aws route53 change-resource-record-sets"
		." --hosted-zone-id %s"
		." --change-batch %s",
		escapeshellarg ($hosted_zone_id),
		escapeshellarg (json_encode ($arg)));

printf ("%s\n", $cmd);
system ($cmd, $rc);
if ($rc != 0) {
	printf ("error running: %s\n", $cmd);
	exit (1);
}
